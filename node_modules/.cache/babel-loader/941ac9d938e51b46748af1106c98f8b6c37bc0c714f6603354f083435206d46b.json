{"ast":null,"code":"import React,{useEffect,useReducer}from'react';import CartContext from'./CartContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const initialState={items:JSON.parse(localStorage.getItem(\"Carts\"))||[],totalAmount:JSON.parse(localStorage.getItem(\"total\"))||0};const ReducerFunc=(state,action)=>{if(action.type===\"ADD\"){const FindCartIndex=state.items.findIndex(item=>item.id===action.item.id);const existingCartItem=state.items[FindCartIndex];console.log(\"true amount\",state.items);const AddTotalAmount=state.totalAmount+action.item.price*action.item.amount;let UpdateItems;if(existingCartItem){console.log(\"testexisting\",existingCartItem.amount);const UpdateItem={...existingCartItem,amount:existingCartItem.amount+action.item.amount};UpdateItems=[...state.items];UpdateItems[FindCartIndex]=UpdateItem;}else{UpdateItems=[...state.items].concat(action.item);}// console.log(\"added\",AddTotalAmount);\nreturn{items:UpdateItems,totalAmount:AddTotalAmount};}if(action.type===\"REMOVE\"){const RemoveItemIndex=state.items.findIndex(item=>item.id===action.id);const RemoveItem=state.items[RemoveItemIndex];const TotalAmount=state.totalAmount;const RemoveItemPrice=RemoveItem.price;const RemoveItemAmount=RemoveItem.amount;const OldAmountDifference=RemoveItemPrice*RemoveItemAmount;const NewAmountDifference=RemoveItemPrice*(RemoveItemAmount-1);const NetAmount=OldAmountDifference-NewAmountDifference;const DisplayAmount=TotalAmount-NetAmount;let FilterRemoveItems;if(RemoveItem){console.log(\"removeamount\",RemoveItem.amount);if(RemoveItem.amount===1){FilterRemoveItems=state.items.filter(item=>item.id!==RemoveItem.id);}else{FilterRemoveItems=state.items.map(item=>{if(item.id===action.id){return{...item,amount:item.amount-1};}return item;});}}return{items:FilterRemoveItems,totalAmount:DisplayAmount};}if(action.type===\"ADDING\"){const AddBackIndex=state.items.findIndex(item=>item.id===action.id);const AddBackItem=state.items[AddBackIndex];const TotalAmount=state.totalAmount;const AddBackPrice=AddBackItem.price;const AddBackAmount=AddBackItem.amount;const OldAmountDifference=AddBackPrice*AddBackAmount;const NewAmountDifference=AddBackPrice*(AddBackAmount+1);const NetDifference=NewAmountDifference-OldAmountDifference;const DisplayAmount=TotalAmount+NetDifference;let UpdateBack;if(AddBackItem){console.log(\"ADDamount\",AddBackAmount);const UpdateBackItem={...AddBackItem,amount:AddBackItem.amount+1};UpdateBack=[...state.items];UpdateBack[AddBackIndex]=UpdateBackItem;}else{console.log(\"O ti lor\");}return{items:UpdateBack,totalAmount:DisplayAmount};}return initialState;};function CartProvider(props){const[CartState,dispatchAction]=useReducer(ReducerFunc,initialState);useEffect(()=>{localStorage.setItem(\"Carts\",JSON.stringify(CartState.items));localStorage.setItem(\"total\",JSON.stringify(CartState.totalAmount));},[CartState.items,CartState.totalAmount]);const AddHandler=item=>{dispatchAction({type:\"ADD\",item:item});};const removeHandler=id=>{dispatchAction({type:\"REMOVE\",id:id});};const AdditionalHandler=id=>{dispatchAction({type:\"ADDING\",id:id});};const CartContet={item:CartState.items,totalAmount:CartState.totalAmount,addItem:AddHandler,removeItem:removeHandler,addingItem:AdditionalHandler};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(CartContext.Provider,{value:CartContet,children:props.children})});}export default CartProvider;","map":{"version":3,"names":["React","useEffect","useReducer","CartContext","jsx","_jsx","Fragment","_Fragment","initialState","items","JSON","parse","localStorage","getItem","totalAmount","ReducerFunc","state","action","type","FindCartIndex","findIndex","item","id","existingCartItem","console","log","AddTotalAmount","price","amount","UpdateItems","UpdateItem","concat","RemoveItemIndex","RemoveItem","TotalAmount","RemoveItemPrice","RemoveItemAmount","OldAmountDifference","NewAmountDifference","NetAmount","DisplayAmount","FilterRemoveItems","filter","map","AddBackIndex","AddBackItem","AddBackPrice","AddBackAmount","NetDifference","UpdateBack","UpdateBackItem","CartProvider","props","CartState","dispatchAction","setItem","stringify","AddHandler","removeHandler","AdditionalHandler","CartContet","addItem","removeItem","addingItem","children","Provider","value"],"sources":["C:/Users/Endee/Documents/FoodApp/src/Store/CartProvider.jsx"],"sourcesContent":["import React,{useEffect, useReducer}from 'react';\r\nimport CartContext from './CartContext';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    items: JSON.parse(localStorage.getItem(\"Carts\"))|| [],\r\n    totalAmount:JSON.parse(localStorage.getItem(\"total\"))|| 0,\r\n};\r\nconst ReducerFunc=(state, action)=>{\r\n    if(action.type === \"ADD\"){\r\n\r\n        const FindCartIndex = state.items.findIndex(item => item.id === action.item.id);\r\n         const existingCartItem = state.items[FindCartIndex];\r\n        console.log(\"true amount\", state.items)\r\n        const AddTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        \r\n        let UpdateItems;\r\n        if (existingCartItem){\r\n            console.log(\"testexisting\", existingCartItem.amount)\r\n          const UpdateItem ={\r\n            ...existingCartItem,\r\n            amount: existingCartItem.amount + action.item.amount,\r\n           };\r\n\r\n           UpdateItems =[...state.items];\r\n           UpdateItems[FindCartIndex] = UpdateItem;\r\n        }else{\r\n            UpdateItems = [...state.items].concat(action.item);\r\n           \r\n        }\r\n        // console.log(\"added\",AddTotalAmount);\r\n        return{\r\n            items:UpdateItems,\r\n            totalAmount:AddTotalAmount,\r\n        }\r\n       \r\n    }\r\n\r\n    if (action.type === \"REMOVE\") {\r\n        const RemoveItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n        const RemoveItem = state.items[RemoveItemIndex];\r\n\r\n        const TotalAmount = state.totalAmount;\r\n        const RemoveItemPrice =RemoveItem.price;\r\n        const RemoveItemAmount = RemoveItem.amount;\r\n        const OldAmountDifference = RemoveItemPrice * RemoveItemAmount;\r\n        const NewAmountDifference = RemoveItemPrice * (RemoveItemAmount -1);\r\n        const NetAmount = OldAmountDifference - NewAmountDifference;\r\n        const DisplayAmount = TotalAmount - NetAmount;\r\n\r\n       \r\n        let FilterRemoveItems;\r\n        if (RemoveItem) {\r\n            console.log(\"removeamount\", RemoveItem.amount)\r\n            if (RemoveItem.amount === 1) {\r\n                FilterRemoveItems = state.items.filter((item) => item.id !== RemoveItem.id);\r\n            } else {\r\n                FilterRemoveItems = state.items.map((item) => {\r\n                    if (item.id === action.id) {\r\n                        return { ...item, amount: item.amount - 1 };\r\n                    }\r\n                    return item;\r\n                });\r\n            }\r\n        }        \r\n        return {\r\n          items: FilterRemoveItems,\r\n          totalAmount: DisplayAmount\r\n        };\r\n      }\r\n      if(action.type === \"ADDING\"){\r\n        const AddBackIndex = state.items.findIndex((item) => item.id === action.id);\r\n        const AddBackItem =state.items[AddBackIndex];\r\n        const TotalAmount = state.totalAmount;\r\n        const AddBackPrice = AddBackItem.price;\r\n        const AddBackAmount = AddBackItem.amount;\r\n        const OldAmountDifference = AddBackPrice * AddBackAmount;\r\n        const NewAmountDifference =AddBackPrice * (AddBackAmount +1);\r\n        const NetDifference = NewAmountDifference - OldAmountDifference;\r\n        const DisplayAmount = TotalAmount + NetDifference\r\n        let UpdateBack;\r\n        if(AddBackItem){\r\n            console.log(\"ADDamount\", AddBackAmount)\r\n            const UpdateBackItem ={\r\n                ...AddBackItem,\r\n                amount: AddBackItem.amount + 1\r\n            };\r\n            UpdateBack=[...state.items];\r\n            UpdateBack[AddBackIndex] = UpdateBackItem\r\n        }else{\r\n            console.log(\"O ti lor\")\r\n        }\r\n\r\n        return{\r\n            items: UpdateBack,\r\n            totalAmount: DisplayAmount,\r\n        }\r\n\r\n      }\r\n      \r\n    return initialState;\r\n}\r\n\r\n\r\n\r\nfunction CartProvider( props ) {\r\n\r\n    const [CartState, dispatchAction]= useReducer(ReducerFunc,initialState);\r\n\r\n   useEffect(()=>{\r\n    localStorage.setItem(\"Carts\",JSON.stringify(CartState.items));\r\n    localStorage.setItem(\"total\",JSON.stringify(CartState.totalAmount));\r\n   },[CartState.items, CartState.totalAmount])\r\n\r\n    const AddHandler=(item)=>{\r\n        dispatchAction({type:\"ADD\", item:item})\r\n    };\r\n    const removeHandler =(id)=>{\r\n        dispatchAction({type:\"REMOVE\", id:id})\r\n    };\r\n    const AdditionalHandler =(id)=>{\r\n        dispatchAction({type:\"ADDING\", id:id})\r\n    }\r\n    const CartContet = {\r\n        item: CartState.items,\r\n        totalAmount:CartState.totalAmount,\r\n        addItem: AddHandler,\r\n        removeItem: removeHandler,\r\n        addingItem:AdditionalHandler,\r\n    }\r\n  return (\r\n        <>\r\n        <CartContext.Provider value={CartContet}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default CartProvider\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}